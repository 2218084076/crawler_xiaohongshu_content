// Generated by CoffeeScript 2.3.0
(function() {
  var Hs, root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  // !!!! Hotpoor root object
  root.Hs || (root.Hs = {});

  Hs = root.Hs;

  $(function() {
    var img_link_with_head, img_link_with_head_do;
    console.log("article coffee");
    root.imgs = {};
    root.check_imgs = function() {
      var k, results, v;
      results = [];
      for (k in imgs) {
        v = imgs[k];
        results.push(console.log(k, v));
      }
      return results;
    };
    img_link_with_head_do = function(d, h, num) {
      var ah, aw, bh, bw, c, ch, cover_logo, ct, cw, d_h, d_w, h_h, h_w, pzcx, pzcy, x0, x1, y0, y1;
      bw = 900;
      bh = 1200;
      aw = 100;
      ah = 100;
      cw = 360;
      ch = 90;
      // pzcx = -500+parseInt(Math.random()*1000)
      // pzcy = -500+parseInt(Math.random()*1000)
      pzcx = 0;
      pzcy = 300;
      d_w = d.width;
      d_h = d.height;
      h_w = h.width;
      h_h = h.height;
      c = document.createElement("canvas");
      c.width = bw;
      c.height = bh;
      ct = c.getContext("2d");
      x0 = 0;
      y0 = 0;
      x1 = bw;
      y1 = bh;
      if (d_w >= d_h) {
        x0 = 0;
        x1 = bw;
        y0 = parseInt((y1 - (bw / d_w * d_h)) / 2);
        y1 = parseInt(bw / d_w * d_h);
      } else {
        y0 = 0;
        y1 = bh;
        x0 = parseInt((x1 - (bh / d_h * d_w)) / 2);
        x1 = parseInt(x0 + (bh / d_h * d_w));
      }
      console.log(x0, y0, x1, y1);
      ct.drawImage(d, 0, 0, d_w, d_h, x0, y0, x1, y1);
      // ct.drawImage(h,0,0,h_w,h_h,parseInt((bw-aw)/2)+pzcx,parseInt((bh-ah)/2)+pzcy,aw,ah)
      ct.font = '30px "微软雅黑"';
      ct.fillStyle = "white";
      ct.textAlign = "center";
      ct.textBaseline = "middle";
      ct.fillText("@" + $(".line_author_info_name").val(), parseInt(bw / 2) + pzcx, parseInt(bh / 2) + pzcy);
      cover_logo = $("#cover_logo")[0];
      ct.drawImage(cover_logo, 0, 0, 1000, 250, parseInt((bw - cw) / 2) + pzcx, parseInt(bh / 2 + ah / 2) + pzcy, cw, ch);
      return $(`.img_made[data-num=${num}]`).attr("src", c.toDataURL());
    };
    img_link_with_head = function(url, headimgurl, num) {
      var d, img, tem;
      imgs[num] = {
        "d_done": false,
        "h_done": false
      };
      d = document.createElement("img");
      d.src = url;
      d.onload = function() {
        imgs[num]["d"] = d;
        imgs[num]["url"] = url;
        imgs[num]["d_done"] = true;
        if (imgs[num]["h_done"] === true) {
          return img_link_with_head_do(imgs[num]["d"], imgs[num]["h"], num);
        }
      };
      if (typeof img !== 'object') {
        console.log("link", img);
        tem = new Image();
        tem.crossOrigin = '';
        tem.src = headimgurl;
        img = tem;
      }
      return tem.onload = function() {
        var _canv, _contex, cli, h, w;
        if (img.width > img.height) {
          w = img.height;
          h = img.height;
        } else {
          w = img.width;
          h = img.width;
        }
        _canv = document.createElement('canvas');
        _canv.width = w;
        _canv.height = h;
        _contex = _canv.getContext("2d");
        cli = {
          x: w / 2,
          y: h / 2,
          r: w / 2
        };
        _contex.clearRect(0, 0, w, h);
        _contex.save();
        _contex.beginPath();
        _contex.arc(cli.x, cli.y, cli.r, 0, Math.PI * 2, false);
        _contex.clip();
        _contex.drawImage(img, 0, 0);
        console.log(_canv.toDataURL());
        h = document.createElement("img");
        h.src = _canv.toDataURL();
        return h.onload = function() {
          imgs[num]["h"] = h;
          imgs[num]["headimgurl"] = headimgurl;
          imgs[num]["h_done"] = true;
          if (imgs[num]["d_done"] === true) {
            return img_link_with_head_do(imgs[num]["d"], imgs[num]["h"], num);
          }
        };
      };
    };
    $("body").on("click", ".get_info", function(evt) {
      var dom, short_link, short_link_val;
      dom = $(this);
      dom.text("解析中");
      short_link_val = $("input[data-name=short_link]").val();
      short_link = "http://" + short_link_val.split("，")[1].split("http://")[1];
      return $.ajax({
        url: "/api/tool/article/get_info",
        type: "GET",
        dataType: "json",
        data: {
          short_link: short_link
        },
        success: function(data) {
          var content, headimgurl_now, i, j, len, num, ref, result, results, time_now, title;
          dom.text("查询");
          if (data.info === "ok") {
            result = data.result;
            title = result["title"].toLocaleUpperCase().replaceAll("PUCO", "口红博主").replaceAll("唇泥", "唇釉");
            content = result["content"].toLocaleUpperCase().replaceAll("PUCO", "口红博主").replaceAll("唇泥", "唇釉");
            $("input[data-name=json_file]").val(result["t"]);
            $("input[data-name=article_title]").val(title);
            $("textarea[data-name=article_content]").val(content);
            $(".line_images").empty();
            $(".line_author_info_img").attr("src", result["user_headimgurl"]);
            $(".line_author_info_name").val(result["user_name"]);
            time_now = (new Date()).getTime();
            num = 0;
            headimgurl_now = result["user_headimgurl"];
            ref = result["image_links"];
            results = [];
            for (j = 0, len = ref.length; j < len; j++) {
              i = ref[j];
              img_link_with_head(i, headimgurl_now, num);
              $(".line_images").append(`<div><img class="line_images_div_img img_made" src="${i}" data-num="${num}"></div>`);
              results.push(num += 1);
            }
            return results;
          }
        },
        error: function(data) {
          return dom.text("解析失败");
        }
      });
    });
    $("body").on("click", ".get_json", function(evt) {
      var dom;
      dom = $(this);
      dom.text("解析中");
      return $.ajax({
        url: "/api/tool/article/get_json",
        type: "GET",
        dataType: "json",
        data: {
          t: $("input[data-name=json_file]").val()
        },
        success: function(data) {
          var content, i, j, len, ref, result, time_now, title;
          dom.text("查询");
          if (data.info === "ok") {
            result = data.result;
            title = result["title"].toLocaleUpperCase().replaceAll("PUCO", "口红博主").replaceAll("唇泥", "唇釉");
            content = result["content"].toLocaleUpperCase().replaceAll("PUCO", "口红博主").replaceAll("唇泥", "唇釉");
            $("input[data-name=article_title]").val(title);
            $("textarea[data-name=article_content]").val(content);
            $(".line_images").empty();
            time_now = (new Date()).getTime();
            ref = result["image_links"];
            for (j = 0, len = ref.length; j < len; j++) {
              i = ref[j];
              $(".line_images").append(`<div><img class="line_images_div_img" src="${i}"></div>`);
            }
            $(".line_author_info_img").attr("src", result["user_headimgurl"]);
            return $(".line_author_info_name").val(result["user_name"]);
          }
        },
        error: function(data) {
          return dom.text("解析失败");
        }
      });
    });
    $("body").on("click", ".copy_plus", function(evt) {
      var copy_aim, dom;
      dom = $(this);
      copy_aim = dom.parents(".line").find(".copy_plus_content").select();
      return document.execCommand("Copy");
    });
    return $("body").on("click", ".make_video", function(evt) {
      var img_dom, img_doms, imgs, j, len;
      $(".download_video").remove();
      img_doms = $(".img_made");
      imgs = [];
      for (j = 0, len = img_doms.length; j < len; j++) {
        img_dom = img_doms[j];
        imgs.push(img_dom.src);
      }
      return $.ajax({
        url: "/api/tool/article/make_video",
        type: "POST",
        dataType: "json",
        data: {
          t: $("input[data-name=json_file]").val(),
          imgs: JSON.stringify(imgs)
        },
        success: function(data) {
          console.log(data);
          return $(".make_video").after("<button class=\"line_btns_btn download_video\">Download</button>");
        },
        error: function(data) {
          return console.log(data);
        }
      });
    });
  });

}).call(this);
